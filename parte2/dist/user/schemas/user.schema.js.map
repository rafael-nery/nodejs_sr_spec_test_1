{"version":3,"file":"user.schema.js","sourceRoot":"/","sources":["user/schemas/user.schema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA+D;AAgBxD,IAAM,IAAI,GAAV,MAAM,IAAI;CAMhB,CAAA;AANY,oBAAI;AAEf;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;sCACtB;AAGjB;IADC,IAAA,eAAI,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;sCACR;eALN,IAAI;IADhB,IAAA,iBAAM,GAAE;GACI,IAAI,CAMhB;AAEY,QAAA,UAAU,GAAG,wBAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n/**\n * Tipo que representa um documento de usuário no MongoDB.\n *\n * Combina a classe `User` com as funcionalidades de documento do Mongoose.\n */\nexport type UserDocument = User & Document;\n\n/**\n * Esquema Mongoose para a entidade `User`.\n *\n * Define a estrutura e as regras de validação para os documentos de usuário no MongoDB.\n */\n@Schema()\nexport class User {\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  @Prop({ required: true })\n  password: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n"]}