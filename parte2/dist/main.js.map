{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":";;AAAA,2CAAiE;AACjE,uCAA0C;AAC1C,mCAA2B;AAC3B,2DAA0C;AAC1C,wDAAuD;AACvD,6CAAwC;AACxC,6CAAgE;AAChE,mEAA0D;AAC1D,iCAAgC;AAChC,wBAAqB;AAErB,MAAM,CAAC,MAAM,EAAE,CAAA;AAEf,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAA0B,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,EAAE;QACrE,MAAM,EAAE,IAAI,0BAAS,EAAE;KACxB,CAAC,CAAA;IAEF,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,GAAE,CAAC,CAAA;IAEjB,GAAG,CAAC,GAAG,CACL,IAAA,4BAAS,EAAC;QACR,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;QACxB,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,wEAAwE;KAClF,CAAC,CACH,CAAA;IAED,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAA;IACxB,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,EAAE,CAAC,CAAA;IACxC,GAAG,CAAC,UAAU,CAAC;QACb,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,gCAAgC;QACzC,WAAW,EAAE,IAAI;KAClB,CAAC,CAAA;IAEF,MAAM,MAAM,GAAG,IAAI,yBAAe,EAAE;SACjC,QAAQ,CAAC,iBAAiB,CAAC;SAC3B,cAAc,CAAC,4CAA4C,CAAC;SAC5D,UAAU,CAAC,KAAK,CAAC;SACjB,aAAa,EAAE;SACf,KAAK,EAAE,CAAA;IACV,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IAC1D,uBAAa,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;IAE9C,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AACxB,CAAC;AAED,KAAK,SAAS,EAAE,CAAA","sourcesContent":["import { INestApplication, ValidationPipe } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\nimport helmet from 'helmet'\nimport rateLimit from 'express-rate-limit'\nimport * as mongoSanitize from 'express-mongo-sanitize'\nimport { AppModule } from '@/app.module'\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger'\nimport { AppLogger } from '@/common/logger/logger.service'\nimport * as dotenv from 'dotenv'\nimport './instrument'\n\ndotenv.config()\n\nasync function bootstrap(): Promise<void> {\n  const app: INestApplication<any> = await NestFactory.create(AppModule, {\n    logger: new AppLogger()\n  })\n\n  app.use(helmet())\n\n  app.use(\n    rateLimit({\n      windowMs: 15 * 60 * 1000,\n      max: 100,\n      message: 'Muitas requisições deste IP, por favor tente novamente após 15 minutos'\n    })\n  )\n\n  app.use(mongoSanitize())\n  app.useGlobalPipes(new ValidationPipe())\n  app.enableCors({\n    origin: '*', // Podemos definir uma URL específica...\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    credentials: true\n  })\n\n  const config = new DocumentBuilder()\n    .setTitle('API de Usuários')\n    .setDescription('API RESTful para gerenciamento de usuários')\n    .setVersion('1.0')\n    .addBearerAuth()\n    .build()\n  const document = SwaggerModule.createDocument(app, config)\n  SwaggerModule.setup('api-docs', app, document)\n\n  await app.listen(3000)\n}\n\nvoid bootstrap()\n"]}